apiVersion: batch/v1
kind: Job
metadata:
  name: '{{ .Release.Name }}-preinstall-migrations'
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: '{{ .Chart.Name }}-{{ .Chart.Version }}'
  annotations:
    'helm.sh/hook': post-install
    'helm.sh/hook-weight': '20'
    'helm.sh/hook-delete-policy': hook-succeeded
spec:
  backoffLimit: 3
  template:
    metadata:
      name: '{{ .Release.Name }}'
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: '{{ .Chart.Name }}-{{ .Chart.Version }}'
    spec:
      restartPolicy: Never
      containers:
        - name: pre-install-job
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}'
          env:
            - name: PORT
              value: {{ .Values.service.port | quote }}
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: demo-app-key
                  key: APP_KEY
            - name: HOST
              value: '0.0.0.0'
            - name: LOG_LEVEL
              value: {{ .Values.api.logLevel | quote }}
            - name: DB_HOST
              value: {{ printf "%s-db" .Release.Name | quote }}
            - name: DB_PORT
              value: '5432'
            - name: DB_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: DB_DATABASE
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: DB_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
          command: {{ .Values.image.migrationCommand | toJson }}
          args: {{ .Values.image.migrationArgs | toJson }}
